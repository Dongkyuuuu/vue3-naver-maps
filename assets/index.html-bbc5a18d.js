import{_ as t,M as p,p as e,q as o,R as c,t as n,N as l,V as i,a1 as a}from"./framework-064a6737.js";const u={},r=a('<h1 id="시작하기" tabindex="-1"><a class="header-anchor" href="#시작하기" aria-hidden="true">#</a> 시작하기</h1><p>:::info 알림 본 문서의 모든 예시는 <code>Composition API</code>로 작성되어 있습니다. <code>Options API</code>도 naver 객체를 반환받아 정상적으로 사용 가능합니다. :::</p><p>제공하는 컴포넌트를 사용하는 경우, <code>vue3-naver-maps</code>에서 컴포넌트를 호출하여 사용 가능합니다. <code>NaverMaps</code> 컴포넌트가 있어야 다른 컴포넌트도 사용 가능 합니다.</p>',3),d=a(`<h2 id="naver-객체" tabindex="-1"><a class="header-anchor" href="#naver-객체" aria-hidden="true">#</a> naver 객체</h2><p>모든 컴포넌트는 <code>@onLoad</code>를 통해 각 객체를 반환합니다. 반환된 객체를 통해서 추가적인 옵션을 적용 시킬 수 있습니다.</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>naver-maps</span> <span class="token attr-name">@onLoad</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onLoadMap($event)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>naver-maps</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> NaverMaps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue3-naver-maps&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> NaverMaps <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">setup</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">onLoadMap</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">mapObject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      map<span class="token punctuation">.</span>value <span class="token operator">=</span> mapObject<span class="token punctuation">;</span> <span class="token comment">// map에 반환된 객체 저장</span>
      map<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">setCenter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">window<span class="token punctuation">.</span>naver<span class="token punctuation">.</span>maps<span class="token punctuation">.</span>LatLng</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 지도 중앙 변경</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      onLoadMap<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="객체옵션" tabindex="-1"><a class="header-anchor" href="#객체옵션" aria-hidden="true">#</a> 객체옵션</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> LatLng <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">window<span class="token punctuation">.</span>naver<span class="token punctuation">.</span>maps<span class="token punctuation">.</span>LatLng</span><span class="token punctuation">(</span><span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><u><strong>lifeCycle에서 window.naver 객체 호출은 불가능 합니다.</strong></u>(created, onMounted 등...) window에 naver.maps 객체가 생성 되기 전 이기 때문입니다.</p><p>각 컴포넌트에서 onLoad 후 window.naver.maps 객체를 사용해주세요.</p><p>위의 예제 처럼 Vue 프로젝트 내부에서 <code>window.naver</code>를 통해 네이버 객체 생성이 가능 합니다.</p><p>본 문서에서는 naver의 객체 옵션에 대해 구체적으로 언급하지 않습니다. 자세한 옵션은 상단 메뉴의 <code>NaverMapsAPI(공식문서)</code>를 클릭하여 확인 가능합니다.</p><h2 id="ui-이벤트" tabindex="-1"><a class="header-anchor" href="#ui-이벤트" aria-hidden="true">#</a> UI 이벤트</h2><p>컴포넌트에서 <code>v-on</code> directive를 이용해서 네이버에서 제공하는 UI 이벤트를 사용할 수 있습니다. UI이벤트는 표준 DOM(Document Object Model) 이벤트처럼 보이나 실제로는 NAVER 지도 API v3의 이벤트입니다.</p><p>자세한 이벤트 목록은 각 컴포넌트 가이드에서 확인 가능합니다.</p>`,12);function k(v,m){const s=p("RouterLink");return e(),o("div",null,[r,c("p",null,[n("타입스크립트 프로젝트를 이용하는 경우, "),l(s,{to:"/types/define.html"},{default:i(()=>[n("타입스크립트")]),_:1}),n("를 참조해주세요.")]),d])}const g=t(u,[["render",k],["__file","index.html.vue"]]);export{g as default};
